# Generated by Django 5.2.4 on 2025-07-31 18:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('FOLLOW', 'Nouvel abonné'), ('NEW_PRONOSTIC', 'Nouveau pronostic')], max_length=20, verbose_name='Type de notification')),
                ('message', models.TextField(verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Destinataire')),
                ('related_object_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Expéditeur')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Pronostic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discipline', models.CharField(choices=[('FOOTBALL', 'Football'), ('TENNIS', 'Tennis'), ('BASKETBALL', 'Basketball')], default='FOOTBALL', max_length=50, verbose_name='Discipline')),
                ('equipe_domicile', models.CharField(max_length=100)),
                ('equipe_exterieur', models.CharField(max_length=100)),
                ('date_match', models.DateTimeField()),
                ('heure_match', models.TimeField(blank=True, null=True)),
                ('ligue', models.CharField(blank=True, max_length=100, null=True)),
                ('prediction_score', models.CharField(blank=True, max_length=50, null=True)),
                ('prediction_details', models.TextField()),
                ('cote', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('mise', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('resultat', models.CharField(choices=[('EN_COURS', 'À venir'), ('GAGNANT', 'Gagnant'), ('PERDANT', 'Perdant'), ('ANNULE', 'Annulé')], default='EN_COURS', max_length=50)),
                ('score_final_domicile', models.IntegerField(blank=True, null=True)),
                ('score_final_exterieur', models.IntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pronostics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pronostic Sportif',
                'verbose_name_plural': 'Pronostics Sportifs',
                'ordering': ['-date_match'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Contenu du commentaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL, verbose_name='Auteur')),
                ('pronostic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='profoot.pronostic', verbose_name='Pronostic')),
            ],
            options={
                'verbose_name': 'Commentaire',
                'verbose_name_plural': 'Commentaires',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_preference', models.CharField(choices=[('light', 'Clair'), ('dark', 'Sombre')], default='light', max_length=10, verbose_name='Préférence de thème')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Profil Utilisateur',
                'verbose_name_plural': 'Profils Utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_followed', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_relations', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_relations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Suivi',
                'verbose_name_plural': 'Suivis',
                'unique_together': {('follower', 'following')},
            },
        ),
    ]
